0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.5.1
3 info using node@v0.10.35
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/linanqiu/Dropbox/Dropbox/Linan/Columbia/Academics/2015 Spring/COMS W3101 js/lexrank',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/linanqiu/.npm/lexrank/1.0.3/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/linanqiu/.npm/lexrank/1.0.3/package.tgz',
9 verbose tar pack   '/Users/linanqiu/Dropbox/Dropbox/Linan/Columbia/Academics/2015 Spring/COMS W3101 js/lexrank' ]
10 verbose tarball /Users/linanqiu/.npm/lexrank/1.0.3/package.tgz
11 verbose folder /Users/linanqiu/Dropbox/Dropbox/Linan/Columbia/Academics/2015 Spring/COMS W3101 js/lexrank
12 info prepublish lexrank@1.0.3
13 verbose addLocalTarball adding from inside cache /Users/linanqiu/.npm/lexrank/1.0.3/package.tgz
14 silly cache afterAdd lexrank@1.0.3
15 verbose afterAdd /Users/linanqiu/.npm/lexrank/1.0.3/package/package.json not in flight; writing
16 verbose afterAdd /Users/linanqiu/.npm/lexrank/1.0.3/package/package.json written
17 silly publish { name: 'lexrank',
17 silly publish   version: '1.0.3',
17 silly publish   description: 'Text summarization using Lexrank',
17 silly publish   main: 'lexrank.js',
17 silly publish   dependencies:
17 silly publish    { natural: '^0.2.1',
17 silly publish      request: '^2.55.0',
17 silly publish      'sentence-tokenizer': '^0.0.7',
17 silly publish      unfluff: '^0.10.0',
17 silly publish      wuzzy: '^0.1.2' },
17 silly publish   devDependencies: {},
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   repository: { type: 'git', url: 'https://github.com/linanqiu/lexrank' },
17 silly publish   keywords: [ 'lexrank' ],
17 silly publish   author: { name: 'linanqiu' },
17 silly publish   license: 'MIT',
17 silly publish   bugs: { url: 'https://github.com/github.com/linanqiu/issues' },
17 silly publish   homepage: 'https://github.com/github.com/linanqiu',
17 silly publish   readme: '# lexrank.js\n\nImplements Radev\'s Lexrank algorithm [http://www.jair.org/papers/paper1523.html](http://www.jair.org/papers/paper1523.html) for unsupervised text summarization in node. Basically applying PageRank to each sentence in a document, finding the most important sentences, and reranking them.\n\n## Quick Start\n\n```js\nvar lexrank = require(\'lexrank\');\n```\n\nThe `lexrank` provides two functions:\n\n```js\nlexrank.summarize(text, lineCount, callback)\n```\n\nwhere\n\n- `text` is the original text. There\'s no need to tokenize the text. Raw text is fine. `lexrank.js` does a sentence tokenization and then word tokenization.\n- `lineCount` is the number of sentences in the output desired.\n\n```js\nlexrank.summarizePage(url, lineCount, callback)\n```\n\nwhere\n\n- `url` is the URL of the page to summarize. `lexrank` then uses [`node-unfluff`](https://github.com/ageitgey/node-unfluff) to extract the text content from the page, then passes it to `lexrank.summarize`\n\nThe other parameters are the same.\n\n## Examples\n\n```js\nvar lexrank = require(\'lexrank\');\nvar originalText = \'some...text...here...\';\nvar topLines = lexrank.summarize(originalText, 5, function (err, toplines, text) {\n  if (err) {\n    console.log(err);\n  }\n  console.log(toplines);\n// [{\n//   weight: 0.16398118821187135,\n//   text: \'The intention of all these rules is to prevent a repeat of the bankruptcies and bail-outs of 2008.\',\n//   index: 3\n// }, {\n//   weight: 0.1603637724075845,\n//   text: \'By throttling the bits of banks that “make markets” in bonds, shares, currencies and commodities, the theory goes, watchdogs have made such assets less liquid.\',\n//   index: 5\n// }, {\n//   weight: 0.1670898954042791,\n//   text: \'Meanwhile, the value of outstanding bonds has swollen to record levels, most of them in the hands of asset managers (see chart).\',\n//   index: 12\n// }, {\n//   weight: 0.17266004699219448,\n//   text: \'That is in part a corollary of banks trimming lending, and so pushing borrowers to the bond market instead, and in part a natural response to low interest rates.\',\n//   index: 13\n// }, {\n//   weight: 0.16298329363189878,\n//   text: \'They also suspect, however, that the high level of liquidity before the crisis was an anomaly that bankers are harping on about in an effort to roll back regulation.\',\n//   index: 32\n// }]\n\n  console.log(text);\n// The intention of all these rules is to prevent a repeat of the bankruptcies and bail-outs of 2008. By throttling the bits of banks that “make markets” in bonds, shares, currencies and commodities, the theory goes, watchdogs have made such assets less liquid. Meanwhile, the value of outstanding bonds has swollen to record levels, most of them in the hands of asset managers (see chart). That is in part a corollary of banks trimming lending, and so pushing borrowers to the bond market instead, and in part a natural response to low interest rates. They also suspect, however, that the high level of liquidity before the crisis was an anomaly that bankers are harping on about in an effort to roll back regulation.\n});\n```\n\nlexrank returns both a toplines object which contains an array of the top sentences objects together with their text, eigenvalues associated with them ,and their sentence index.\n\nSince most of us will be using this to grab text from sites, lexrank can take URLs as well.\n\n```js\nvar lexrank = require(\'lexrank\');\nvar url = \'http://www.economist.com/news/finance-and-economics/21648673-regulators-have-made-banking-safer-has-made-markets-riskier-frozen\';\nvar topLines = lexrank.summarizePage(url, 5, function (err, topLines, text) {\n  if (err) {\n    console.log(err);\n  }\n  console.log(toplines);\n// [{\n//   weight: 0.16398118821187135,\n//   text: \'The intention of all these rules is to prevent a repeat of the bankruptcies and bail-outs of 2008.\',\n//   index: 3\n// }, {\n//   weight: 0.1603637724075845,\n//   text: \'By throttling the bits of banks that “make markets” in bonds, shares, currencies and commodities, the theory goes, watchdogs have made such assets less liquid.\',\n//   index: 5\n// }, {\n//   weight: 0.1670898954042791,\n//   text: \'Meanwhile, the value of outstanding bonds has swollen to record levels, most of them in the hands of asset managers (see chart).\',\n//   index: 12\n// }, {\n//   weight: 0.17266004699219448,\n//   text: \'That is in part a corollary of banks trimming lending, and so pushing borrowers to the bond market instead, and in part a natural response to low interest rates.\',\n//   index: 13\n// }, {\n//   weight: 0.16298329363189878,\n//   text: \'They also suspect, however, that the high level of liquidity before the crisis was an anomaly that bankers are harping on about in an effort to roll back regulation.\',\n//   index: 32\n// }]\n\n  console.log(text);\n// The intention of all these rules is to prevent a repeat of the bankruptcies and bail-outs of 2008. By throttling the bits of banks that “make markets” in bonds, shares, currencies and commodities, the theory goes, watchdogs have made such assets less liquid. Meanwhile, the value of outstanding bonds has swollen to record levels, most of them in the hands of asset managers (see chart). That is in part a corollary of banks trimming lending, and so pushing borrowers to the bond market instead, and in part a natural response to low interest rates. They also suspect, however, that the high level of liquidity before the crisis was an anomaly that bankers are harping on about in an effort to roll back regulation.\n});\n```\n\n## Evaluation\n\nThis is **not** a great summarization algorithm. However, it is an improvement on picking the first few sentences at little to no cost in time.\n\nFor example using this [article from The Economist on liquidity in financial markets](http://www.economist.com/news/finance-and-economics/21648673-regulators-have-made-banking-safer-has-made-markets-riskier-frozen):\n\nThe first paragraph shows\n\n```\nTO ENSURE that it meets the 750 new rules on capital imposed in the aftermath of the financial crisis, JPMorgan Chase employs over 950 people. A further 400 or so try to follow around 500 regulations on the liquidity of its assets, designed to stop the bank toppling over if markets seize up. A team of 300 is needed to monitor compliance with the Volcker rule, which in almost 1,000 pages restricts banks from trading on their own account.\n```\n\nlexrank produces\n\n```\nThe intention of all these rules is to prevent a repeat of the bankruptcies and bail-outs of 2008. By throttling the bits of banks that “make markets” in bonds, shares, currencies and commodities, the theory goes, watchdogs have made such assets less liquid. Meanwhile, the value of outstanding bonds has swollen to record levels, most of them in the hands of asset managers (see chart). That is in part a corollary of banks trimming lending, and so pushing borrowers to the bond market instead, and in part a natural response to low interest rates. They also suspect, however, that the high level of liquidity before the crisis was an anomaly that bankers are harping on about in an effort to roll back regulation.\n```\n\nWhich is way more relevant than the story on JPMorgan. I\'m sorry JPMorgan.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 [Linan Qiu](github.com/linanqiu)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '10babe123844bdf98e33f575cf9edabe98d1181f',
17 silly publish   _id: 'lexrank@1.0.3',
17 silly publish   _shasum: '997400a86959bd4c4ebf5bd28abc43a34e7f0ed5',
17 silly publish   _from: '.' }
18 silly mapToRegistry name lexrank
19 silly mapToRegistry using default registry
20 silly mapToRegistry registry https://registry.npmjs.org/
21 silly mapToRegistry uri https://registry.npmjs.org/lexrank
22 verbose publish registryBase https://registry.npmjs.org/
23 silly publish uploading /Users/linanqiu/.npm/lexrank/1.0.3/package.tgz
24 verbose request uri https://registry.npmjs.org/lexrank
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 21:00:33
27 verbose request using bearer token for auth
28 verbose request id 54bafc124cd9878c
29 http request PUT https://registry.npmjs.org/lexrank
30 http 403 https://registry.npmjs.org/lexrank
31 verbose headers { date: 'Wed, 22 Apr 2015 01:00:35 GMT',
31 verbose headers   server: 'Apache',
31 verbose headers   'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=60',
31 verbose headers   'content-length': '95',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   'x-served-by': 'cache-jfk1031-JFK',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1429664434.721272,VS0,VE750',
31 verbose headers   'keep-alive': 'timeout=10, max=50',
31 verbose headers   connection: 'Keep-Alive' }
32 verbose request invalidating /Users/linanqiu/.npm/registry.npmjs.org/lexrank on PUT
33 error publish Failed PUT 403
34 verbose stack Error: "You cannot publish over the previously published version 1.0.3." : lexrank
34 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:254:14)
34 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:178:14)
34 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:344:22)
34 verbose stack     at Request.emit (events.js:98:17)
34 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1239:14)
34 verbose stack     at Request.emit (events.js:117:20)
34 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1187:12)
34 verbose stack     at IncomingMessage.emit (events.js:117:20)
34 verbose stack     at _stream_readable.js:944:16
34 verbose stack     at process._tickCallback (node.js:442:13)
35 verbose statusCode 403
36 verbose pkgid lexrank
37 verbose cwd /Users/linanqiu/Dropbox/Dropbox/Linan/Columbia/Academics/2015 Spring/COMS W3101 js/lexrank
38 error Darwin 14.1.0
39 error argv "node" "/usr/local/bin/npm" "publish"
40 error node v0.10.35
41 error npm  v2.5.1
42 error code E403
43 error "You cannot publish over the previously published version 1.0.3." : lexrank
44 error If you need help, you may report this error at:
44 error     <http://github.com/npm/npm/issues>
45 verbose exit [ 1, true ]
